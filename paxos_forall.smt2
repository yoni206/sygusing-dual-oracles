; benchmark generated from python API
(set-info :status unknown)
(declare-sort node 0)
 (declare-sort value 0)
 (declare-sort quorum 0)
 (declare-sort round 0)
 (declare-fun le (round round) Bool)
(declare-fun member (node quorum) Bool)
(declare-fun old_choosable_node (round value quorum) node)
(declare-fun new_choosable_node (round value quorum) node)
(declare-fun old_decision_quorum (round value) quorum)
(declare-fun new_decision_quorum (round value) quorum)
(declare-fun old_decision (round value) Bool)
(declare-fun new_decision (round value) Bool)
(declare-fun old_proposal (round value) Bool)
(declare-fun new_proposal (round value) Bool)
(declare-fun old_left_round (node round) Bool)
(declare-fun new_left_round (node round) Bool)
(declare-fun old_one_b (node round) Bool)
(declare-fun new_one_b (node round) Bool)
(declare-fun old_one_a (round) Bool)
(declare-fun new_one_a (round) Bool)
(declare-fun old_vote (node round value) Bool)
(declare-fun new_vote (node round value) Bool)
(declare-fun none () round)
(assert
 (forall ((X_11 round) )(le X_11 X_11))
 )
(assert
 (forall ((X_12 round) (Y_13 round) (Z_14 round) )(let (($x36 (le X_12 Z_14)))
 (let (($x37 (le Y_13 Z_14)))
 (let (($x38 (le X_12 Y_13)))
 (let (($x39 (and $x38 $x37)))
 (=> $x39 $x36))))))
 )
(assert
 (forall ((X_15 round) (Y_16 round) )(let (($x44 (= X_15 Y_16)))
 (let (($x45 (le Y_16 X_15)))
 (let (($x37 (le X_15 Y_16)))
 (let (($x46 (and $x37 $x45)))
 (=> $x46 $x44))))))
 )
(assert
 (forall ((X_17 round) (Y_18 round) )(let (($x45 (le Y_18 X_17)))
 (let (($x37 (le X_17 Y_18)))
 (or $x37 $x45))))
 )
(assert
 (forall ((Q1_19 quorum) (Q2_20 quorum) )(exists ((N_21 node) )(and (member N_21 Q1_19) (member N_21 Q2_20)))
 )
 )
(assert
 (exists ((n_149 node) (v_150 value) (r_151 round) )(let (($x857 (forall ((x0 round) (x1 value) (x2 quorum) )(let ((?x282 (old_choosable_node x0 x1 x2)))
 (let ((?x283 (new_choosable_node x0 x1 x2)))
 (= ?x283 ?x282))))
 ))
 (let (($x279 (forall ((x0 round) (x1 value) )(let ((?x277 (old_decision_quorum x0 x1)))
 (let ((?x278 (new_decision_quorum x0 x1)))
 (= ?x278 ?x277))))
 ))
 (let (($x311 (forall ((x0 round) (x1 value) )(let (($x161 (old_decision x0 x1)))
 (let (($x271 (new_decision x0 x1)))
 (= $x271 $x161))))
 ))
 (let (($x1129 (forall ((x0 round) (x1 value) )(let (($x100 (old_proposal x0 x1)))
 (let (($x268 (new_proposal x0 x1)))
 (= $x268 $x100))))
 ))
 (let (($x407 (forall ((x0 node) (x1 round) )(let (($x264 (old_left_round x0 x1)))
 (let (($x265 (new_left_round x0 x1)))
 (= $x265 $x264))))
 ))
 (let (($x1132 (forall ((x0 node) (x1 round) )(let (($x260 (old_one_b x0 x1)))
 (let (($x261 (new_one_b x0 x1)))
 (= $x261 $x260))))
 ))
 (let (($x1371 (forall ((x0 round) )(let (($x202 (old_one_a x0)))
 (let (($x224 (new_one_a x0)))
 (= $x224 $x202))))
 ))
 (let (($x993 (forall ((N_152 node) (R_153 round) (V_154 value) )(let (($x101 (old_vote N_152 R_153 V_154)))
 (let (($x272 (new_vote N_152 R_153 V_154)))
 (= $x272 (or $x101 (and (= N_152 n_149) (= R_153 r_151) (= V_154 v_150)))))))
 ))
 (let (($x314 (old_proposal r_151 v_150)))
 (let (($x177 (old_left_round n_149 r_151)))
 (let (($x147 (not $x177)))
 (and (and (and (distinct r_151 none) true) $x147 $x314 $x993) $x1371 $x1132 $x407 $x1129 $x311 $x279 $x857 true)))))))))))))
 )
(assert
 (forall ((N_24 node) )(forall ((R1_25 round) (R2_26 round) (V1_27 value) (V2_28 value) (Q_29 quorum) )(let (($x141 (old_left_round N_24 R1_25)))
 (let (($x133 (member N_24 Q_29)))
 (let (($x168 (and $x133 $x141 (not (old_vote N_24 R1_25 V1_27)))))
 (let ((?x210 (old_choosable_node R1_25 V1_27 Q_29)))
 (let (($x175 (= N_24 ?x210)))
 (let (($x213 (old_proposal R2_26 V2_28)))
 (let (($x214 (le R2_26 R1_25)))
 (let (($x215 (not $x214)))
 (=> (and $x215 $x213 (and (distinct V1_27 V2_28) true) $x175) $x168))))))))))
 )
 )
(assert
 (forall ((X_0 round) )(le X_0 X_0))
 )
(assert
 (forall ((N1_19 node) (Q_20 quorum) (R_21 round) (V_22 value) (N2_23 node) )(let (($x188 (old_left_round N2_23 R_21)))
 (let (($x189 (member N2_23 Q_20)))
 (let (($x190 (and $x189 $x188 (not (old_vote N2_23 R_21 V_22)))))
 (let ((?x191 (old_choosable_node R_21 V_22 Q_20)))
 (let (($x192 (= N2_23 ?x191)))
 (let (($x195 (old_left_round N1_19 R_21)))
 (let (($x196 (member N1_19 Q_20)))
 (let (($x197 (and $x196 $x195 (not (old_vote N1_19 R_21 V_22)) $x192)))
 (=> $x197 $x190))))))))))
 )
(assert
 (forall ((N_14 node) (V_15 value) )(let (($x80 (old_vote N_14 none V_15)))
 (not $x80)))
 )
(assert
 (forall ((N_16 node) (R2_17 round) (R1_18 round) )(let (($x177 (old_left_round N_16 R1_18)))
 (let (($x37 (le R2_17 R1_18)))
 (let (($x62 (not $x37)))
 (let (($x180 (old_one_b N_16 R2_17)))
 (let (($x178 (and $x180 $x62)))
 (=> $x178 $x177)))))))
 )
(assert
 (forall ((N_7 node) (R_8 round) (V_9 value) )(let (($x100 (old_proposal R_8 V_9)))
 (let (($x101 (old_vote N_7 R_8 V_9)))
 (=> $x101 $x100))))
 )
(assert
 (forall ((Q1_8 quorum) (Q2_9 quorum) )(exists ((N_10 node) )(and (member N_10 Q1_8) (member N_10 Q2_9)))
 )
 )
(assert
 (forall ((R1_0 round) (V1_1 value) (R2_2 round) (V2_3 value) )(let (($x165 (= V1_1 V2_3)))
 (let (($x161 (old_decision R2_2 V2_3)))
 (let (($x164 (old_decision R1_0 V1_1)))
 (let (($x163 (and $x164 $x161)))
 (=> $x163 $x165))))))
 )
(assert
 (forall ((R_10 round) (V_11 value) (N_12 node) (Q_13 quorum) )(let (($x69 (old_vote N_12 R_10 V_11)))
 (let (($x95 (= Q_13 (old_decision_quorum R_10 V_11))))
 (let (($x93 (member N_12 Q_13)))
 (let (($x164 (old_decision R_10 V_11)))
 (let (($x88 (and $x164 $x93 $x95)))
 (=> $x88 $x69)))))))
 )
(assert
 (forall ((R_4 round) (V1_5 value) (V2_6 value) )(let (($x158 (= V1_5 V2_6)))
 (let (($x148 (old_proposal R_4 V2_6)))
 (let (($x94 (old_proposal R_4 V1_5)))
 (let (($x102 (and $x94 $x148)))
 (=> $x102 $x158))))))
 )
(assert
 (forall ((X_1 round) (Y_2 round) (Z_3 round) )(let (($x36 (le X_1 Z_3)))
 (let (($x37 (le Y_2 Z_3)))
 (let (($x38 (le X_1 Y_2)))
 (let (($x39 (and $x38 $x37)))
 (=> $x39 $x36))))))
 )
(assert
 (forall ((X_4 round) (Y_5 round) )(let (($x44 (= X_4 Y_5)))
 (let (($x45 (le Y_5 X_4)))
 (let (($x37 (le X_4 Y_5)))
 (let (($x46 (and $x37 $x45)))
 (=> $x46 $x44))))))
 )
(assert
 (forall ((X_6 round) (Y_7 round) )(let (($x45 (le Y_7 X_6)))
 (let (($x37 (le X_6 Y_7)))
 (or $x37 $x45))))
 )
(assert
 (let (($x2857 (forall ((N1_174 node) (Q_175 quorum) (R_176 round) (V_177 value) (N2_178 node) )(let (($x189 (member N2_178 Q_175)))
 (let (($x2855 (and $x189 (new_left_round N2_178 R_176) (not (new_vote N2_178 R_176 V_177)))))
 (let (($x196 (member N1_174 Q_175)))
 (let (($x2930 (and $x196 (new_left_round N1_174 R_176) (not (new_vote N1_174 R_176 V_177)) (= N2_178 (new_choosable_node R_176 V_177 Q_175)))))
 (=> $x2930 $x2855))))))
 ))
 (not $x2857)))
(check-sat)